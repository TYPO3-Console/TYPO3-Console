{namespace d=Typo3Console\CreateReferenceCommand\ViewHelpers}
.. include:: ../Includes.txt



.. _typo3_console-command-reference:

{title -> d:format.headline(lineCharacter: '=', withOverline: 1)}

.. note::

   This reference uses `{commandName}` as the command to invoke. If you are on
   Windows, this will probably not work, there you need to use `{commandName}.bat`
   instead. In Composer based installations, the `{commandName}` binary will be
   located in the binary directory specified in the root composer.json (by
   default `vendor/bin`)


The following reference was automatically generated from code.



<d:format.headline>Application Options</d:format.headline>

The following options can be used with every command:

<f:for each="{applicationOptions}" key="name" as="description">`{name}`
   {description.description -> f:format.raw()}

</f:for>
<f:for each="{allCommandsByPackageKey}" as="allCommands" key="packageKey">
.. _`{title}: {packageKey}`:

<d:format.headline>Available Commands</d:format.headline>

<f:for each="{allCommands}" as="command">
.. _`{title}: {packageKey} {command.identifier}`:

<d:format.headline>`{command.identifier}`</d:format.headline>

**{command.shortDescription}**

{command.description -> f:format.raw()}

<f:if condition="{command.arguments}"><d:format.headline lineCharacter="~">Arguments</d:format.headline>

<f:for each="{command.arguments}" key="name" as="description">`{name}`
   {description -> f:format.raw()}
</f:for>
</f:if>

<f:if condition="{command.options}"><d:format.headline lineCharacter="~">Options</d:format.headline>

<f:for each="{command.options}" key="name" as="description">`{name}`
   {description.description -> f:format.raw()}

- Accept value: {description.acceptValue}
- Is value required: {description.isValueRequired}
- Is multiple: {description.isMultiple}
<f:if condition="{description.default} != 'NULL'">- Default: {description.default -> f:format.raw()}</f:if>

</f:for>
</f:if>

<f:if condition="{command.relatedCommands}"><d:format.headline lineCharacter="~">Related commands</d:format.headline>

<f:for each="{command.relatedCommands}" key="relatedCommandIdentifier" as="relatedCommandDescription">`{relatedCommandIdentifier}`
  {relatedCommandDescription -> f:format.raw()}
</f:for>
</f:if>
</f:for></f:for>
